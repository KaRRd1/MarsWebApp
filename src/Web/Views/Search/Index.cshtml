@model SearchIndexViewModel

@{
    var path = Context.Request.Path + Context.Request.QueryString;
    var query = Context.Request.Query["query"];
    ViewData["Title"] = query;
}
<h3>Search result «@query»</h3>
<div class="d-flex justify-content-between align-items-center">
    <h3>Profiles</h3>
    <a class="text-decoration-underline" asp-action="Profiles" asp-route-query="@query">View all</a>
</div>
<div class="profiles-preview mb-3">
    @if (!Model.Profiles.Any())
    {
        <span>Profiles not found</span>
    }
    @foreach (var profile in Model.Profiles)
    {
        <a class="profile-item elem-backlight" asp-controller="Profile" asp-action="Index" asp-route-username="@profile.Nickname">
            <div class="avatar-medium me-2">
                <partial name="_profileAvatar" for="@profile"/>
            </div>
            <span>@profile.Nickname</span>
        </a>
    }
</div>

<h3>Posts</h3>
@if (!Model.PostsViewModel.PostItems.Any())
{
    <span>Posts not found</span>
}
else
{
    <div class="posts">
        @foreach (var post in Model.PostsViewModel.PostItems)
        {
            <partial name="_post" for="@post"/>
        }
    </div>
    <div class="loading-wrapper mb-2 d-none" id="loader">
        <div class="spinner-border"></div>
    </div>
}

@section scripts
{
    <script>
        InfiniteScroll("@Context.Request.GetPathWithQuery(true)", ".posts").init();
    </script>
}